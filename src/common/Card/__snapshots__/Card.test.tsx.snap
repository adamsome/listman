// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
.emotion-11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: var(--bg-content);
  border: 1px solid var(--border-content);
  border-bottom-width: 0;
  color: var(--body);
  cursor: pointer;
  font-size: var(--font-size-body);
  outline: none;
  overflow: hidden;
  text-align: start;
}

.emotion-11:first-of-type {
  border-top-left-radius: var(--space-border-radius);
  border-top-right-radius: var(--space-border-radius);
}

.emotion-11:last-of-type {
  border-bottom-left-radius: var(--space-border-radius);
  border-bottom-right-radius: var(--space-border-radius);
  border-bottom-width: 1px;
}

.emotion-11:focus {
  box-shadow: 0 0 0 2px var(--border-focus),var(--shadow);
}

.emotion-0 {
  display: block;
  max-width: 100%;
  margin-left: var(--space-inset);
  margin-right: var(--space-inset);
}

.emotion-0:first-of-type {
  margin-left: 0;
}

.emotion-0:last-of-type {
  margin-right: 0;
}

.emotion-10 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-right: var(--space-inset);
  padding-top: var(--space-stack);
  padding-bottom: var(--space-stack);
  overflow: hidden;
}

.emotion-10:first-of-type {
  margin-left: var(--space-inset);
}

.emotion-9 {
  display: block;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-7:not(:last-of-type) {
  margin-bottom: var(--space-stack-small);
}

.emotion-7:not(:first-of-type) {
  margin-top: var(--space-stack-small);
}

.emotion-5 {
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
  margin-right: 1rem;
  display: block;
  min-width: 0;
}

.emotion-2 {
  color: var(--strong);
  font-size: var(--font-size-big);
  font-weight: var(--font-weight-bold);
  margin: 0;
}

.emotion-1 {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.emotion-4 {
  color: var(--strong);
  font-size: var(--font-size-big);
  font-weight: var(--font-weight-bold);
  margin: 0;
  color: var(--subtle);
}

.emotion-6 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.emotion-8 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

<div
  className="emotion-11"
  onClick={[Function]}
  onKeyDown={[Function]}
  role="button"
  tabIndex={0}
>
  <img
    alt="Sample Art"
    className="emotion-0"
    height="114px"
    src="sample-art.png"
  />
  <div
    className="emotion-10"
  >
    <div
      className="emotion-9"
    >
      <div
        className="emotion-7"
      >
        <div
          className="emotion-5"
        >
          <h4
            className="emotion-2"
          >
            <div
              className="emotion-1"
            >
              Long title of an type of artifact that is being rated
            </div>
          </h4>
          <h4
            className="emotion-4"
          >
            <div
              className="emotion-1"
            >
              Short subtitle
            </div>
          </h4>
        </div>
        <div
          className="emotion-6"
        >
          <div>
            <svg
              height="1.5rem"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              width="1.5rem"
            >
              <g
                style={
                  Object {
                    "opacity": 0.25,
                    "transition": "opacity 100ms ease-in-out",
                  }
                }
                x={-0.2}
                y={0.9}
              >
                <svg
                  viewBox="0 0 512 512"
                >
                  <circle
                    cx="256"
                    cy="256"
                    fill="currentColor"
                    r="40"
                    strokeWidth="0"
                    transform="inherit"
                    transform-origin="center"
                  />
                </svg>
              </g>
              <g
                style={
                  Object {
                    "opacity": 0,
                    "transform": "scale(0)",
                    "transformOrigin": "center",
                    "transition": "opacity 200ms ease-in-out, transform 100ms ease-in-out",
                  }
                }
              >
                <svg
                  viewBox="0 0 51 48"
                >
                  <path
                    d="m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z"
                    fill="currentColor"
                    stroke="currentColor"
                  />
                </svg>
              </g>
            </svg>
            <svg
              height="1.5rem"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              width="1.5rem"
            >
              <g
                style={
                  Object {
                    "opacity": 0.25,
                    "transition": "opacity 100ms ease-in-out",
                  }
                }
                x={-0.2}
                y={0.9}
              >
                <svg
                  viewBox="0 0 512 512"
                >
                  <circle
                    cx="256"
                    cy="256"
                    fill="currentColor"
                    r="40"
                    strokeWidth="0"
                    transform="inherit"
                    transform-origin="center"
                  />
                </svg>
              </g>
              <g
                style={
                  Object {
                    "opacity": 0,
                    "transform": "scale(0)",
                    "transformOrigin": "center",
                    "transition": "opacity 200ms ease-in-out, transform 100ms ease-in-out",
                  }
                }
              >
                <svg
                  viewBox="0 0 51 48"
                >
                  <path
                    d="m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z"
                    fill="currentColor"
                    stroke="currentColor"
                  />
                </svg>
              </g>
            </svg>
            <svg
              height="1.5rem"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              width="1.5rem"
            >
              <g
                style={
                  Object {
                    "opacity": 0.25,
                    "transition": "opacity 100ms ease-in-out",
                  }
                }
                x={-0.2}
                y={0.9}
              >
                <svg
                  viewBox="0 0 512 512"
                >
                  <circle
                    cx="256"
                    cy="256"
                    fill="currentColor"
                    r="40"
                    strokeWidth="0"
                    transform="inherit"
                    transform-origin="center"
                  />
                </svg>
              </g>
              <g
                style={
                  Object {
                    "opacity": 0,
                    "transform": "scale(0)",
                    "transformOrigin": "center",
                    "transition": "opacity 200ms ease-in-out, transform 100ms ease-in-out",
                  }
                }
              >
                <svg
                  viewBox="0 0 51 48"
                >
                  <path
                    d="m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z"
                    fill="currentColor"
                    stroke="currentColor"
                  />
                </svg>
              </g>
            </svg>
            <svg
              height="1.5rem"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              width="1.5rem"
            >
              <g
                style={
                  Object {
                    "opacity": 0.25,
                    "transition": "opacity 100ms ease-in-out",
                  }
                }
                x={-0.2}
                y={0.9}
              >
                <svg
                  viewBox="0 0 512 512"
                >
                  <circle
                    cx="256"
                    cy="256"
                    fill="currentColor"
                    r="40"
                    strokeWidth="0"
                    transform="inherit"
                    transform-origin="center"
                  />
                </svg>
              </g>
              <g
                style={
                  Object {
                    "opacity": 0,
                    "transform": "scale(0)",
                    "transformOrigin": "center",
                    "transition": "opacity 200ms ease-in-out, transform 100ms ease-in-out",
                  }
                }
              >
                <svg
                  viewBox="0 0 51 48"
                >
                  <path
                    d="m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z"
                    fill="currentColor"
                    stroke="currentColor"
                  />
                </svg>
              </g>
            </svg>
            <svg
              height="1.5rem"
              onClick={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              width="1.5rem"
            >
              <g
                style={
                  Object {
                    "opacity": 0.25,
                    "transition": "opacity 100ms ease-in-out",
                  }
                }
                x={-0.2}
                y={0.9}
              >
                <svg
                  viewBox="0 0 512 512"
                >
                  <circle
                    cx="256"
                    cy="256"
                    fill="currentColor"
                    r="40"
                    strokeWidth="0"
                    transform="inherit"
                    transform-origin="center"
                  />
                </svg>
              </g>
              <g
                style={
                  Object {
                    "opacity": 0,
                    "transform": "scale(0)",
                    "transformOrigin": "center",
                    "transition": "opacity 200ms ease-in-out, transform 100ms ease-in-out",
                  }
                }
              >
                <svg
                  viewBox="0 0 51 48"
                >
                  <path
                    d="m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z"
                    fill="currentColor"
                    stroke="currentColor"
                  />
                </svg>
              </g>
            </svg>
          </div>
        </div>
      </div>
      <div
        className="emotion-8"
      >
        No description.
      </div>
    </div>
  </div>
</div>
`;
